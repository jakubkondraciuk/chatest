Sub CopyMultipleDataSetsAndCreateFiles()
    On Error GoTo ErrorHandler

    Dim selectedFile As Variant
    Dim sourceWorkbook As Workbook
    Dim sourceSheet As Worksheet
    Dim newWorkbook As Workbook
    Dim newSheet As Worksheet
    Dim savePath As String
    Dim targetFolder As String
    Dim newFileName As String
    Dim timestamp As String
    Dim lastRow As Long
    Dim i As Integer
    Dim labelValue As String
    Dim folderDialog As FileDialog

    MsgBox "Please select the Excel file to copy data from.", vbInformation

    selectedFile = Application.GetOpenFilename("Excel Files (*.xls*), *.xls*", , "Select Excel File")
    If selectedFile = False Then
        MsgBox "No file was selected.", vbExclamation
        Exit Sub
    End If

    ' === Nowy krok: wybór folderu ===
    Set folderDialog = Application.FileDialog(msoFileDialogFolderPicker)
    folderDialog.Title = "Select destination folder for new files"
    If folderDialog.Show <> -1 Then
        MsgBox "No folder was selected.", vbExclamation
        Exit Sub
    End If
    targetFolder = folderDialog.SelectedItems(1)

    Application.ScreenUpdating = False

    Set sourceWorkbook = Workbooks.Open(selectedFile)
    Set sourceSheet = sourceWorkbook.Sheets(1)

    lastRow = sourceSheet.Cells(sourceSheet.Rows.Count, "A").End(xlUp).Row

    ' Kopiowanie zestawów kolumn w następujący sposób:
    ' 1. A, B, C, D
    ' 2. A, E, F, G
    ' 3. A, H, I, J
    ' i tak dalej...
    Dim columnSets As Variant
    columnSets = Array(Array(2, 3, 4), Array(5, 6, 7), Array(8, 9, 10)) ' Zestawy kolumn do kopiowania

    For i = LBound(columnSets) To UBound(columnSets)
        Set newWorkbook = Workbooks.Add
        Set newSheet = newWorkbook.Sheets(1)

        ' Ustalamy nazwę etykiety na podstawie pierwszej kolumny danego zestawu
        labelValue = Trim(sourceSheet.Cells(1, columnSets(i)(0)).Value)
        If labelValue = "" Then labelValue = "Unnamed"

        ' Kopiowanie danych
        newSheet.Range("A1").Resize(lastRow, 1).Value = sourceSheet.Range("A1").Resize(lastRow, 1).Value
        Dim j As Integer
        For j = LBound(columnSets(i)) To UBound(columnSets(i))
            newSheet.Cells(1, j + 2).Resize(lastRow, 1).Value = sourceSheet.Cells(1, columnSets(i)(j)).Resize(lastRow, 1).Value
        Next j

        ' Tworzenie nazwy pliku
        timestamp = Format(Now, "yyyy-mm-dd_HH-MM-SS")
        newFileName = labelValue & "_" & timestamp & ".xlsx"
        savePath = targetFolder & "\" & newFileName

        ' Zapisanie i zamknięcie nowego pliku
        Application.DisplayAlerts = False
        newWorkbook.SaveAs Filename:=savePath, FileFormat:=xlOpenXMLWorkbook
        Application.DisplayAlerts = True

        newWorkbook.Close SaveChanges:=False
    Next i

    sourceWorkbook.Close SaveChanges:=False

    MsgBox "All files have been created and saved to:" & vbCrLf & targetFolder, vbInformation

Cleanup:
    Application.ScreenUpdating = True
    Exit Sub

ErrorHandler:
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True

    On Error Resume Next
    If Not sourceWorkbook Is Nothing Then sourceWorkbook.Close SaveChanges:=False
    If Not newWorkbook Is Nothing Then newWorkbook.Close SaveChanges:=False
    On Error GoTo 0

    MsgBox "An error occurred: " & Err.Description, vbCritical, "Error #" & Err.Number
    Resume Cleanup
End Sub
